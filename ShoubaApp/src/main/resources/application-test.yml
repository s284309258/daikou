bootdo:
  uploadPath: /data/app
  #上午交易的时间段
  startTimeAm: 903000
  endTimeAm: 113000
  #下午交易的时间段
  startTimePm: 130000
  endTimePm: 150000
  startWeek: 2
  endWeek: 6
logging:
  level:
    root: info
    com.bootdo: debug
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://47.74.226.170 :3306/tianYuan?useUnicode=true&characterEncoding=UTF-8&useSSL=true&autoReconnect=true&useAffectedRows=true
    username: root
    password: cesHi0945#4
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  redis:
    database: 0
    cluster:
      nodes: 127.0.0.1:4379,127.0.0.1:5379,127.0.0.1:6379,127.0.0.1:7379,127.0.0.1:8379,127.0.0.1:9379
    host: localhost
    port: 6379
    password: LSwangli9284#?g
    # 连接超时时间（毫秒）
    timeout: 10000
    expire-seconds: 120
    #jedis:
    pool:
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 10
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1